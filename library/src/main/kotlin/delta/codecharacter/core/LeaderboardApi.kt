/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package delta.codecharacter.core

import delta.codecharacter.dtos.LeaderboardEntryDto
import io.swagger.annotations.Api
import io.swagger.annotations.ApiOperation
import io.swagger.annotations.ApiParam
import io.swagger.annotations.ApiResponse
import io.swagger.annotations.ApiResponses
import io.swagger.annotations.Authorization
import org.springframework.http.HttpStatus
import org.springframework.http.ResponseEntity
import org.springframework.validation.annotation.Validated
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestMethod
import org.springframework.web.bind.annotation.RequestParam
import javax.validation.Valid

@Validated
@Api(value = "Leaderboard", description = "The Leaderboard API")
@RequestMapping("\${api.base-path:}")
interface LeaderboardApi {

    @ApiOperation(
        value = "Get leaderboard",
        nickname = "getLeaderboard",
        notes = "Get leaderboard",
        response = LeaderboardEntryDto::class,
        responseContainer = "List",
        authorizations = [Authorization(value = "http-bearer")]
    )
    @ApiResponses(
        value = [ApiResponse(
            code = 200,
            message = "OK",
            response = LeaderboardEntryDto::class,
            responseContainer = "List"
        ), ApiResponse(code = 401, message = "Unauthorized")]
    )
    @RequestMapping(
        method = [RequestMethod.GET],
        value = ["/leaderboard"],
        produces = ["application/json"]
    )
    fun getLeaderboard(
        @ApiParam(value = "Index of the page") @Valid @RequestParam(
            value = "page",
            required = false
        ) page: Int?,
        @ApiParam(value = "Size of the page") @Valid @RequestParam(
            value = "size",
            required = false
        ) size: Int?
    ): ResponseEntity<List<LeaderboardEntryDto>> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
